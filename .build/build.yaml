apiVersion: builds.katanomi.dev/v1alpha1
kind: Build
spec:
  runTemplate:
    spec:
      workspaces:
      - name: source
        volumeClaimTemplate:
          spec:
            accessModes:
              - ReadWriteMany
            resources:
              requests:
                storage: 500Mi
  workspaces:
    - description: >
        This workspace is shared among all the pipeline tasks to read/write
        common resources
      name: source
  tasks:
    # generate-version
    - name: generate-version
      timeout: 5m
      retries: 1
      workspaces:
        - name: source
          workspace: source
      taskRef:
        kind: ClusterTask
        name: alauda-generate-version
      params:
        - name: repo-type
          value: gitlab
        - name: repo-url
          value: $(params.git-url)
        - name: repo-ref
          value: $(params.git-revision)
    - name: code-scan
      runAfter:
        - generate-version
      workspaces:
        - name: source
          workspace: source
      timeout: 30m
      retries: 1
      taskRef:
        kind: ClusterTask
        name: alauda-codescan-sonarqube
      params:
        - name: address
          value: https://build-sonar.alauda.cn
        - name: version
          value: $(tasks.generate-version.results.version)
        - name: pr-id
          value: '$(tasks.generate-version.results.pr-id)'
        - name: target
          value: '$(tasks.generate-version.results.target-branch)'
        - name: branch
          value: $(tasks.generate-version.results.branch)
        - name: extra-key-values
          value:
            - 'sonar.projectVersion=$(tasks.generate-version.results.version)'
    - name: alb-test
      runAfter:
        - code-scan
      retries: 3
      workspaces:
        - name: source
          workspace: source
      taskSpec:
        description: >
          run alb test
        workspaces:
          - name: source
            workspace: source
        steps:
          - image: build-harbor.alauda.cn/ops/golang:1.18-alpine3.15 # keep it as same as alb docker builder.
            name: build
            imagePullPolicy: IfNotPresent
            workingDir: '$(workspaces.source.path)'
            resources:
              requests:
                cpu: "2"
                memory: "4G"
              limits:
                cpu: "2"
                memory: "4G"              
            script: |
              #!/bin/sh
              scripts/go-test.sh
    - name: build-alb
      runAfter:
        - code-scan
      timeout: 30m
      retries: 3
      taskRef:
        kind: ClusterTask
        name: alauda-build-image
      workspaces:
        - name: source
          workspace: source
      params:
        - name: container-image
          value: build-harbor.alauda.cn/acp/alb2
        - name: container-image-tag
          value: $(tasks.generate-version.results.version)
        - name: dockerfile
          value: ./Dockerfile
        - name: platform
          value:
            - linux/amd64
            - linux/arm64
        - name: tools-image
          value: registry.alauda.cn:60080/devops/builder-tools:v3.8-0-g377a3f9
        - name: verbose
          value: "true"
    - name: build-nginx
      runAfter:
        - code-scan
      timeout: 30m
      retries: 3
      taskRef:
        kind: ClusterTask
        name: alauda-build-image
      workspaces:
        - name: source
          workspace: source
      params:
        - name: container-image
          value: build-harbor.alauda.cn/3rdparty/alb-nginx
        - name: container-image-tag
          value: $(tasks.generate-version.results.version)
        - name: dockerfile
          value: ./alb-nginx/Dockerfile
        - name: platform
          value:
            - linux/amd64
            - linux/arm64
        - name: tools-image
          value: registry.alauda.cn:60080/devops/builder-tools:v3.8-0-g377a3f9
        - name: verbose
          value: "true"
    - name: nginx-test
      timeout: 30m
      retries: 3
      runAfter:
        - build-nginx
      params:
      - name: nginx-tag
        value: $(tasks.generate-version.results.version)
      workspaces:
        - name: source
          workspace: source
      taskSpec:
        description: >
          run nginx test
        workspaces:
          - name: source
            workspace: source
        params:
        - name: nginx-tag
          value: $(params.nginx-tag)
        steps:
          - image: build-harbor.alauda.cn/3rdparty/alb-nginx:$(params.nginx-tag)
            name: build
            imagePullPolicy: IfNotPresent
            workingDir: '$(workspaces.source.path)'
            resources:
              requests:
                cpu: "4"
                memory: "4G"
              limits:
                cpu: "4"
                memory: "4G"              
            script: |
              #!/bin/sh
              scripts/nginx-test.sh
    - name: alauda-generate-chart-version
      runAfter:
        - generate-version
      timeout: 30m
      retries: 3
      taskRef:
        kind: ClusterTask
        name: alauda-generate-chart-version
      workspaces:
        - name: source
          workspace: source
      params:
        - name: chart-path
          value: ./chart
        - name: branch
          value: $(tasks.generate-version.results.branch)
        - name: namespace
          value: acp
        - name: comfigmap-name
          value: alauda-gitlab-container-platform-alb2
    - name: build-chart
      runAfter:
        - alauda-generate-chart-version
        - build-nginx
        - build-alb
        - alb-test
        - nginx-test
      timeout: 30m
      retries: 3
      taskRef:
        kind: ClusterTask
        name: alauda-build-oci-chart-update
      workspaces:
        - name: source
          workspace: source
      params:
        - name: dir
          value: ./chart
        - name: address
          value: build-harbor.alauda.cn/acp/chart-alauda-alb2
        - name: version
          value: $(tasks.alauda-generate-chart-version.results.version)
        - name: branch
          value: $(tasks.generate-version.results.branch)
        - name: git-revision
          value: $(params.git-revision)
        - name: image-tag
          value: $(tasks.generate-version.results.version),$(tasks.generate-version.results.version)
        - name: values-path
          value: global.images.alb2.tag,global.images.nginx.tag
        - name: commit 
          value:  $(tasks.generate-version.results.commit-id)
    - name: alauda-release-tag
      runAfter:
        - build-chart
      when:
       # only in release or custom release branches
        - input: "true"
          operator: in
          values:
          - "$(tasks.generate-version.results.is-custom-release-branch)"
          - "$(tasks.generate-version.results.is-release-branch)"
      timeout: 30m
      retries: 3
      taskRef:
        kind: ClusterTask
        name: alauda-release-tag
      workspaces:
        - name: source
          workspace: source
      params:
        - name: verbose
          value: "true"
        - name: base-image
          value: build-harbor.alauda.cn/devops/builder-tools:ubuntu-v3.6-14-g56f12fa
        - name: version
          value: $(tasks.generate-version.results.version)
        - name: git-user-name
          value: Alauda Bot
        - name: git-user-email
          value: alaudabot@alauda.io