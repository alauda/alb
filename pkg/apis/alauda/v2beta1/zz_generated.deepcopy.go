//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v2beta1

import (
	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ALB2) DeepCopyInto(out *ALB2) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ALB2.
func (in *ALB2) DeepCopy() *ALB2 {
	if in == nil {
		return nil
	}
	out := new(ALB2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ALB2) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ALB2List) DeepCopyInto(out *ALB2List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ALB2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ALB2List.
func (in *ALB2List) DeepCopy() *ALB2List {
	if in == nil {
		return nil
	}
	out := new(ALB2List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ALB2List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ALB2Spec) DeepCopyInto(out *ALB2Spec) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(ExternalAlbConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ALB2Spec.
func (in *ALB2Spec) DeepCopy() *ALB2Spec {
	if in == nil {
		return nil
	}
	out := new(ALB2Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ALB2Status) DeepCopyInto(out *ALB2Status) {
	*out = *in
	in.ProbeTimeStr.DeepCopyInto(&out.ProbeTimeStr)
	in.Detail.DeepCopyInto(&out.Detail)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ALB2Status.
func (in *ALB2Status) DeepCopy() *ALB2Status {
	if in == nil {
		return nil
	}
	out := new(ALB2Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ALB2StatusDetail) DeepCopyInto(out *ALB2StatusDetail) {
	*out = *in
	in.Deploy.DeepCopyInto(&out.Deploy)
	in.Alb.DeepCopyInto(&out.Alb)
	in.AddressStatus.DeepCopyInto(&out.AddressStatus)
	out.Versions = in.Versions
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ALB2StatusDetail.
func (in *ALB2StatusDetail) DeepCopy() *ALB2StatusDetail {
	if in == nil {
		return nil
	}
	out := new(ALB2StatusDetail)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbStatus) DeepCopyInto(out *AlbStatus) {
	*out = *in
	if in.PortStatus != nil {
		in, out := &in.PortStatus, &out.PortStatus
		*out = make(map[string]PortStatus, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbStatus.
func (in *AlbStatus) DeepCopy() *AlbStatus {
	if in == nil {
		return nil
	}
	out := new(AlbStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssignedAddress) DeepCopyInto(out *AssignedAddress) {
	*out = *in
	if in.Ipv4 != nil {
		in, out := &in.Ipv4, &out.Ipv4
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Ipv6 != nil {
		in, out := &in.Ipv6, &out.Ipv6
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssignedAddress.
func (in *AssignedAddress) DeepCopy() *AssignedAddress {
	if in == nil {
		return nil
	}
	out := new(AssignedAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerResource) DeepCopyInto(out *ContainerResource) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerResource.
func (in *ContainerResource) DeepCopy() *ContainerResource {
	if in == nil {
		return nil
	}
	out := new(ContainerResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeployStatus) DeepCopyInto(out *DeployStatus) {
	*out = *in
	in.ProbeTimeStr.DeepCopyInto(&out.ProbeTimeStr)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeployStatus.
func (in *DeployStatus) DeepCopy() *DeployStatus {
	if in == nil {
		return nil
	}
	out := new(DeployStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalAlbConfig) DeepCopyInto(out *ExternalAlbConfig) {
	*out = *in
	if in.LoadbalancerName != nil {
		in, out := &in.LoadbalancerName, &out.LoadbalancerName
		*out = new(string)
		**out = **in
	}
	if in.Vip != nil {
		in, out := &in.Vip, &out.Vip
		*out = new(VipConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkMode != nil {
		in, out := &in.NetworkMode, &out.NetworkMode
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LoadbalancerType != nil {
		in, out := &in.LoadbalancerType, &out.LoadbalancerType
		*out = new(string)
		**out = **in
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(int)
		**out = **in
	}
	if in.EnableGC != nil {
		in, out := &in.EnableGC, &out.EnableGC
		*out = new(string)
		**out = **in
	}
	if in.EnableGCAppRule != nil {
		in, out := &in.EnableGCAppRule, &out.EnableGCAppRule
		*out = new(string)
		**out = **in
	}
	if in.EnableAlb != nil {
		in, out := &in.EnableAlb, &out.EnableAlb
		*out = new(bool)
		**out = **in
	}
	if in.EnablePrometheus != nil {
		in, out := &in.EnablePrometheus, &out.EnablePrometheus
		*out = new(string)
		**out = **in
	}
	if in.MetricsPort != nil {
		in, out := &in.MetricsPort, &out.MetricsPort
		*out = new(int)
		**out = **in
	}
	if in.EnablePortprobe != nil {
		in, out := &in.EnablePortprobe, &out.EnablePortprobe
		*out = new(string)
		**out = **in
	}
	if in.EnableIPV6 != nil {
		in, out := &in.EnableIPV6, &out.EnableIPV6
		*out = new(string)
		**out = **in
	}
	if in.EnableHTTP2 != nil {
		in, out := &in.EnableHTTP2, &out.EnableHTTP2
		*out = new(string)
		**out = **in
	}
	if in.EnableIngress != nil {
		in, out := &in.EnableIngress, &out.EnableIngress
		*out = new(string)
		**out = **in
	}
	if in.DefaultIngressClass != nil {
		in, out := &in.DefaultIngressClass, &out.DefaultIngressClass
		*out = new(bool)
		**out = **in
	}
	if in.EnableCrossClusters != nil {
		in, out := &in.EnableCrossClusters, &out.EnableCrossClusters
		*out = new(string)
		**out = **in
	}
	if in.EnableGzip != nil {
		in, out := &in.EnableGzip, &out.EnableGzip
		*out = new(string)
		**out = **in
	}
	if in.DefaultSSLCert != nil {
		in, out := &in.DefaultSSLCert, &out.DefaultSSLCert
		*out = new(string)
		**out = **in
	}
	if in.DefaultSSLStrategy != nil {
		in, out := &in.DefaultSSLStrategy, &out.DefaultSSLStrategy
		*out = new(string)
		**out = **in
	}
	if in.IngressHTTPPort != nil {
		in, out := &in.IngressHTTPPort, &out.IngressHTTPPort
		*out = new(int)
		**out = **in
	}
	if in.IngressHTTPSPort != nil {
		in, out := &in.IngressHTTPSPort, &out.IngressHTTPSPort
		*out = new(int)
		**out = **in
	}
	if in.IngressController != nil {
		in, out := &in.IngressController, &out.IngressController
		*out = new(string)
		**out = **in
	}
	if in.EnableGoMonitor != nil {
		in, out := &in.EnableGoMonitor, &out.EnableGoMonitor
		*out = new(bool)
		**out = **in
	}
	if in.EnableProfile != nil {
		in, out := &in.EnableProfile, &out.EnableProfile
		*out = new(bool)
		**out = **in
	}
	if in.GoMonitorPort != nil {
		in, out := &in.GoMonitorPort, &out.GoMonitorPort
		*out = new(int)
		**out = **in
	}
	if in.WorkerLimit != nil {
		in, out := &in.WorkerLimit, &out.WorkerLimit
		*out = new(int)
		**out = **in
	}
	if in.ResyncPeriod != nil {
		in, out := &in.ResyncPeriod, &out.ResyncPeriod
		*out = new(int)
		**out = **in
	}
	if in.SyncPolicyInterval != nil {
		in, out := &in.SyncPolicyInterval, &out.SyncPolicyInterval
		*out = new(int)
		**out = **in
	}
	if in.CleanMetricsInterval != nil {
		in, out := &in.CleanMetricsInterval, &out.CleanMetricsInterval
		*out = new(int)
		**out = **in
	}
	if in.Backlog != nil {
		in, out := &in.Backlog, &out.Backlog
		*out = new(int)
		**out = **in
	}
	if in.MaxTermSeconds != nil {
		in, out := &in.MaxTermSeconds, &out.MaxTermSeconds
		*out = new(int)
		**out = **in
	}
	if in.ReloadTimeout != nil {
		in, out := &in.ReloadTimeout, &out.ReloadTimeout
		*out = new(int)
		**out = **in
	}
	if in.PolicyZip != nil {
		in, out := &in.PolicyZip, &out.PolicyZip
		*out = new(bool)
		**out = **in
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(ExternalGateway)
		(*in).DeepCopyInto(*out)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(ExternalResources)
		(*in).DeepCopyInto(*out)
	}
	if in.Projects != nil {
		in, out := &in.Projects, &out.Projects
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnablePortProject != nil {
		in, out := &in.EnablePortProject, &out.EnablePortProject
		*out = new(bool)
		**out = **in
	}
	if in.PortProjects != nil {
		in, out := &in.PortProjects, &out.PortProjects
		*out = new(string)
		**out = **in
	}
	if in.AntiAffinityKey != nil {
		in, out := &in.AntiAffinityKey, &out.AntiAffinityKey
		*out = new(string)
		**out = **in
	}
	if in.BindNIC != nil {
		in, out := &in.BindNIC, &out.BindNIC
		*out = new(string)
		**out = **in
	}
	if in.Overwrite != nil {
		in, out := &in.Overwrite, &out.Overwrite
		*out = new(ExternalOverwrite)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalAlbConfig.
func (in *ExternalAlbConfig) DeepCopy() *ExternalAlbConfig {
	if in == nil {
		return nil
	}
	out := new(ExternalAlbConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalConfigmapOverwriteConfig) DeepCopyInto(out *ExternalConfigmapOverwriteConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalConfigmapOverwriteConfig.
func (in *ExternalConfigmapOverwriteConfig) DeepCopy() *ExternalConfigmapOverwriteConfig {
	if in == nil {
		return nil
	}
	out := new(ExternalConfigmapOverwriteConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalGateway) DeepCopyInto(out *ExternalGateway) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(GatewayMode)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalGateway.
func (in *ExternalGateway) DeepCopy() *ExternalGateway {
	if in == nil {
		return nil
	}
	out := new(ExternalGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalImageOverwriteConfig) DeepCopyInto(out *ExternalImageOverwriteConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalImageOverwriteConfig.
func (in *ExternalImageOverwriteConfig) DeepCopy() *ExternalImageOverwriteConfig {
	if in == nil {
		return nil
	}
	out := new(ExternalImageOverwriteConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalOverwrite) DeepCopyInto(out *ExternalOverwrite) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = make([]ExternalImageOverwriteConfig, len(*in))
		copy(*out, *in)
	}
	if in.Configmap != nil {
		in, out := &in.Configmap, &out.Configmap
		*out = make([]ExternalConfigmapOverwriteConfig, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalOverwrite.
func (in *ExternalOverwrite) DeepCopy() *ExternalOverwrite {
	if in == nil {
		return nil
	}
	out := new(ExternalOverwrite)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalResource) DeepCopyInto(out *ExternalResource) {
	*out = *in
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = new(ContainerResource)
		**out = **in
	}
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = new(ContainerResource)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalResource.
func (in *ExternalResource) DeepCopy() *ExternalResource {
	if in == nil {
		return nil
	}
	out := new(ExternalResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalResources) DeepCopyInto(out *ExternalResources) {
	*out = *in
	if in.Alb != nil {
		in, out := &in.Alb, &out.Alb
		*out = new(ExternalResource)
		(*in).DeepCopyInto(*out)
	}
	if in.ExternalResource != nil {
		in, out := &in.ExternalResource, &out.ExternalResource
		*out = new(ExternalResource)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalResources.
func (in *ExternalResources) DeepCopy() *ExternalResources {
	if in == nil {
		return nil
	}
	out := new(ExternalResources)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortStatus) DeepCopyInto(out *PortStatus) {
	*out = *in
	in.ProbeTimeStr.DeepCopyInto(&out.ProbeTimeStr)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortStatus.
func (in *PortStatus) DeepCopy() *PortStatus {
	if in == nil {
		return nil
	}
	out := new(PortStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionStatus) DeepCopyInto(out *VersionStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionStatus.
func (in *VersionStatus) DeepCopy() *VersionStatus {
	if in == nil {
		return nil
	}
	out := new(VersionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VipConfig) DeepCopyInto(out *VipConfig) {
	*out = *in
	if in.LbSvcIpFamilyPolicy != nil {
		in, out := &in.LbSvcIpFamilyPolicy, &out.LbSvcIpFamilyPolicy
		*out = new(v1.IPFamilyPolicy)
		**out = **in
	}
	if in.AllocateLoadBalancerNodePorts != nil {
		in, out := &in.AllocateLoadBalancerNodePorts, &out.AllocateLoadBalancerNodePorts
		*out = new(bool)
		**out = **in
	}
	if in.LbSvcAnnotations != nil {
		in, out := &in.LbSvcAnnotations, &out.LbSvcAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VipConfig.
func (in *VipConfig) DeepCopy() *VipConfig {
	if in == nil {
		return nil
	}
	out := new(VipConfig)
	in.DeepCopyInto(out)
	return out
}
