kind: Deployment
apiVersion: extensions/v1beta1
spec:
  selector:
    matchLabels:
      service.alauda.io/name: deployment-alb2
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    spec:
      serviceAccountName: alb2
      hostNetwork: true
      nodeSelector:
        alb2: 'true'
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  alb2.alauda.io/type: local
              topologyKey: kubernetes.io/hostname
      tolerations:
        - operator: Exists
          effect: NoSchedule
          key: node-role.kubernetes.io/master
      containers:
        - securityContext:
            privileged: true
          name: alb2
          image: 'index.alauda.cn/alaudaorg/alb2:v2.1-0-g7014183'
          terminationMessagePolicy: File
          env:
            - name: NAME
              value: default
            - name: NAMESPACE
              value: alauda-system
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: '200m'
              memory: 128M
    metadata:
      labels:
        alb2.alauda.io/type: local
        service.alauda.io/name: deployment-alb2
metadata:
  name: alb2
  namespace: alauda-system