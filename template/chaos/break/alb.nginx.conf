user root;
worker_processes  4;
daemon off;
master_process off;
error_log ./logs/error.log info;
pid       ./nginx.pid;
events {
    accept_mutex off;
    worker_connections  64;
}

env SYNC_POLICY_INTERVAL;
env CLEAN_METRICS_INTERVAL;
env SYNC_BACKEND_INTERVAL;
env NEW_POLICY_PATH;
env DEFAULT_SSL_STRATEGY;
env DEFAULT_SSL_STRATEGY;
env INGRESS_HTTPS_PORT;



http {
    access_log ./logs/access.log;
    default_type text/plain;

    proxy_send_timeout         5s;
    proxy_read_timeout         5s;

    include       ./alb2/template/tweak/http.conf;
    lua_package_path "/usr/local/lib/lua/?.lua;./alb2/template/nginx/lua/?.lua;./alb2/template/t/?.lua;./alb2/template/t/lib/?.lua;./alb2/template/nginx/lua/vendor/?.lua;;";

    error_log ./logs/error.log info;

    gzip on;
    gzip_comp_level 5;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types application/atom+xml application/javascript application/x-javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/svg+xml image/x-icon text/css text/javascript text/plain text/x-component;
    gzip_proxied any;
    gzip_vary on;

    init_by_lua_block {
            require "resty.core"
            ok, res = pcall(require, "balancer")
            if not ok then
                error("require failed: " .. tostring(res))
            else
                balancer = res
            end
            --require("metrics").init()
    }

    init_worker_by_lua_file ./alb2/template/nginx/lua/worker.lua;

    server {

        listen     0.0.0.0:80 backlog=2048 default_server;
        listen     [::]:80 backlog=2048 default_server;

        server_name _;

        include       ./alb2/template/tweak/http_server.conf;

        location / {
            set $upstream default;
            set $backend_protocol http;

            rewrite_by_lua_file ./alb2/template/nginx/lua/l7_rewrite.lua;
            proxy_pass $backend_protocol://http_backend;
            header_filter_by_lua_file ./alb2/template/nginx/lua/l7_header_filter_phase.lua;


            log_by_lua_block {
                -- require("metrics").log()
            }
        }
    }

    upstream http_backend {
        server 0.0.0.1:1234;   # just an invalid address as a place holder

        balancer_by_lua_block {
            balancer.balance()
        }
        include       ./alb2/template/tweak/upstream.conf;
    }
}

