steps:
- name: Docker and Sonar
  parallel:
    - name: Code Scan
      container: tools
      groovy:
        - |+
          deploy.scan().startACPSonar(null, "-D sonar.projectVersion=${env.VERSION}")
    - name: ALB2 Image
      container: tools
      groovy:
        - |+
          def image = deploy.dockerBuildWithRegister(
            dockerfile: "Dockerfile.nginx.local",
            context: ".",
            address: "acp/alb2",
            tag: env.VERSION
          ).setArg("commit_id", env.COMMIT_ID).setArg("app_version", env.VERSION)
          image.startWithoutArm().push().buildArm()

- name: Update chart
  container: "devops"
  groovy:
    - |+
      def branchName = env.GIT_BRANCH
      def chartPath = "./chart"
      def isPullRequest = env.VERSION.contains("-pr-")
      def isMaster = branchName == "master"
      def isRelease = deploy.isReleaseBranch(branchName)
      def releaseType = "alpha"
      if (isRelease) {
        releaseType = "beta"
      } else if (isPullRequest) {
        releaseType = "pr"
      }
      def generatedVersion = sh script: "kubectl devops chart version -n ${alaudaContext.getNamespace()} --name alb2 --version=${env.MAJOR_VERSION} --type=${releaseType}", label: "generating chart version", returnStdout: true
      sh script: "kubectl devops chart update -v 3 --path ${chartPath} -c alb2=${env.VERSION} --annotations release=${releaseType},branch=${branchName} --chart-version=${generatedVersion}", label: "updating chart files"
      def harborAddress = "https://harbor-b.alauda.cn/chartrepo/acp"
      def harborCredentials = "cpaas-system-global-credentials-harbor-chart"
      container('devops') {
        withCredentials([usernamePassword(credentialsId: harborCredentials, passwordVariable: 'PASS', usernameVariable: 'USER')]) {
          sh script: "helm repo add harbor --username ${USER} --password ${PASS} ${harborAddress}", label: "helm repo add harbor"
        }
        sh script: "helm repo update", label: "helm repo update"
        sh script: "helm push ${chartPath} harbor", label: "helm push"
      }