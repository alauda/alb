kind: ConfigMap
apiVersion: v1
metadata:
  name: {{LbName}}
  namespace: {{GlobalNs}}
data:
  http: |
    log_format  http  '[$time_local] $remote_addr "$host" "$request" '
                      '$status $upstream_status $upstream_addr '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '$request_time $upstream_response_time';
    access_log  /var/log/nginx/access.log  http buffer=16k flush=1s;
    rewrite_log on;
    {{DebugLogPlaceHolder}}
    # Show alb info to identify error response
    server_tokens off;
    more_set_headers 'Via: 1.1 alb/v3.5.0-alpha.514';
    proxy_pass_header Server;

    # Disable checking of client request body size
    client_max_body_size 0;

    # Lua shared dict
    lua_code_cache on;
    lua_package_path '/usr/local/lib/lua/?.lua;/usr/local/openresty/lualib/?.lua;/usr/local/openresty/site/lualib/?.lua;/alb/template/nginx/lua/?.lua;;';
    lua_package_cpath '/usr/local/lib/lua/?.so;;';
    lua_shared_dict http_policy   10m;
    lua_shared_dict http_certs_cache   10m;
    lua_shared_dict http_backend_cache 5m;
    lua_shared_dict http_alb_cache     20m;
    lua_shared_dict http_raw     5m;
    lua_shared_dict prometheus_metrics 10m;
    lua_shared_dict http_ipc_shared_dict 1m;

    proxy_connect_timeout      5s;
    proxy_send_timeout         60s;
    proxy_read_timeout         60s;
    proxy_buffering            off;
    proxy_buffer_size          4k;
    proxy_buffers              4 32k;
    proxy_busy_buffers_size    64k;
    proxy_temp_file_write_size 64k;
    # keepalive to improve http performance
    keepalive_timeout  65;

    sendfile        on;
    aio             threads;
    tcp_nopush      on;
    tcp_nodelay     on;
    log_subrequest  on;
    reset_timedout_connection on;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      '';
    }

    # Start error if set lower
    server_names_hash_bucket_size 512;

    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_early_data off;
    ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:DH+AESGCM:RSA+AESGCM:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
    ssl_dhparam /etc/ssl/dhparam.pem;
    ssl_ecdh_curve secp384r1;

    http2_max_field_size            4k;
    http2_max_header_size           16k;
    http2_max_requests              1000;
    http2_max_concurrent_streams    128;
  http_server: |
    # fix http://jira.alaudatech.com/browse/DEV-15515, use lua instead
    set              $custom_host      $http_host;
    proxy_set_header Host              $custom_host;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade;

    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    # fix http://jira.alauda.cn/browse/DEVOPS-5309
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host  $http_host;
    proxy_set_header X-Forwarded-Port  $server_port;

    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
    proxy_set_header X-Original-Method $request_method;

    proxy_redirect   off;
    proxy_http_version 1.1;

    # fix http://jira.alauda.cn/browse/SGHL-142
    underscores_in_headers on;
  stream: |
    # Lua shared dict
    lua_code_cache on;
    lua_package_path '/usr/local/lib/lua/?.lua;/usr/local/openresty/lualib/?.lua;/usr/local/openresty/site/lualib/?.lua;/alb/template/nginx/lua/?.lua;;';
    lua_package_cpath '/usr/local/lib/lua/?.so;;';
    lua_shared_dict stream_policy   10m;
    lua_shared_dict stream_backend_cache 5m;
    lua_shared_dict stream_alb_cache     20m;
    lua_shared_dict stream_raw     5m;
    lua_shared_dict stream_ipc_shared_dict 1m;

    proxy_connect_timeout      5s;
    proxy_timeout              60s;
    tcp_nodelay                on;
  upstream: |
    keepalive 320;
---
# Source: alauda-alb2/templates/configmap.yaml
apiVersion: v1
data:
  range: "[]"
kind: ConfigMap
metadata:
  name: {{LbName}}-port-info
  namespace: {{GlobalNs}}
  labels:
    port-info: "true"
    name: {{LbName}}
---
# Source: alauda-alb2/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    service_name: alb2-{{LbName}}
  name: {{LbName}}
  namespace: {{GlobalNs}}
spec:
  ports:
  - name: metrics
    port: 1936
    protocol: TCP
    targetPort: 1936
  selector:
    service_name: alb2-{{LbName}}
  sessionAffinity: None
  type: ClusterIP
---
# Source: alauda-alb2/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
spec:
  selector:
    matchLabels:
      service.alauda.io/name: deployment-{{LbName}}
      service_name: alb2-{{LbName}}
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      nodeSelector:
        {}
      imagePullSecrets:
      - name: alauda-harbor
      containers:
        - securityContext:
            privileged: true
          name: alb2
          image: "{{LbImage}}"
          terminationMessagePolicy: File
          env:
            - name: NAME
              value: {{LbName}}
            - name: NAMESPACE
              value: {{GlobalNs}}
            - name: DOMAIN
              value: alauda.io
            - name: ENABLE_GC
              value: "false"
            - name: ENABLE_GC_APP_RULE
              value: "true"
            - name: ENABLE_PROMETHEUS
              value: "true"
            - name: ENABLE_PORTPROBE
              value: "true"
            - name: ENABLE_IPV6
              value: "true"
            - name: ENABLE_HTTP2
              value: "true"
            - name: ENABLE_GZIP
              value: "true"
            - name: SERVE_INGRESS
              value: "true"
            - name: ENABLE_PROFILE
              value: "false"
            - name: DEFAULT-SSL-CERTIFICATE
              value: ""
            - name: DEFAULT-SSL-STRATEGY
              value: "Never"
            - name: INGRESS_HTTP_PORT
              value: "80"
            - name: INGRESS_HTTPS_PORT
              value: "443"
            - name: WORKER_LIMIT
              value: "8"
            - name: SCENARIO
              value: "base"
            - name: RESYNC_PERIOD
              value: "300"
            - name: METRICS_PORT
              value: "1936"
            - name: BACKLOG
              value: "2048"
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          imagePullPolicy: Never
          readinessProbe:
            httpGet:
              path: /status
              port: 1936
            initialDelaySeconds: 6
            periodSeconds: 1
          resources:
            limits:
              cpu: "2"
              memory: 2Gi
            requests:
              cpu: 200m
              memory: 128Mi
          volumeMounts:
          - name: tweak-conf
            mountPath: /alb/tweak/
          - name: shared-data
            mountPath: /var/log/nginx
        - name: log-sidecar
          image: "{{LbImage}}"
          imagePullPolicy: Never
          volumeMounts:
          - name: shared-data
            mountPath: /var/log/nginx
          command: [ "/usr/bin/tail", "-F", "/var/log/nginx/access.log" ]

      volumes:
      - name: tweak-conf
        configMap:
          name: {{LbName}}
          items:
          - key: http
            path: http.conf
          - key: http_server
            path: http_server.conf
          - key: upstream
            path: upstream.conf
          - key: stream
            path: stream.conf
      - name: shared-data
        emptyDir: { }
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        alb2.alauda.io/type: local
        service.alauda.io/name: deployment-{{LbName}}
        service_name: alb2-{{LbName}}
        alauda.io/product: "Platform-Center"
metadata:
  name: {{LbName}}
  namespace: {{GlobalNs}}
  labels:
    service_name: alb2-{{LbName}}
---
# Source: alauda-alb2/templates/alb2-instance.yaml
apiVersion: crd.alauda.io/v1
kind: ALB2
metadata:
  name: {{LbName}}
  namespace: {{GlobalNs}}
  labels:
    project.alauda.io/ALL_ALL: "true"
  annotations:
    alauda.io/display-name: 
spec:
  address: 127.0.0.1
  bind_address: ''
  domains: 
  iaas_id: ''
  type: nginx
---
# Source: alauda-alb2/templates/addon-crd.yaml
apiVersion: infrastructure.alauda.io/v1alpha1
kind: Feature
metadata:
  labels:
    instanceType: alb2
    type: ingress-controller
  name: {{LbName}}-{{GlobalNs}}
spec:
  accessInfo:
    host: 127.0.0.1
  instanceType: alb2
  type: ingress-controller
  version: "1.0"
---
apiVersion: crd.alauda.io/v1
kind: Frontend
metadata:
  labels:
    alb2.alauda.io/name: {{LbName}}
    project.alauda.io/ALL_ALL: "true"
  name: {{LbName}}-{{FtPort}}
  namespace: cpaas-system
  ownerReferences:
  - apiVersion: crd.alauda.io/v1
    kind: alaudaloadbalancer2
    name: {{LbName}}-{{FtPort}}
    uid: {{FtUid}} 
spec:
  backendProtocol: HTTP
  port: {{FtPort}}
  protocol: http
  serviceGroup:
    services: []
    session_affinity_attribute: ""
    session_affinity_policy: ""
