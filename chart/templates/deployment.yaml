kind: Deployment
apiVersion: apps/v1
spec:
  selector:
    matchLabels:
      service.{{ .Values.global.labelBaseDomain }}/name: deployment-{{ .Values.loadbalancerName }}
      service_name: alb2-{{ .Values.loadbalancerName }}
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  alb2.{{ .Values.global.labelBaseDomain }}/type: {{ .Values.antiAffinityKey }}
              topologyKey: kubernetes.io/hostname
      tolerations:
        - operator: Exists
      containers:
        - securityContext:
            privileged: true
          name: alb2
          image: "{{ .Values.global.registry.address }}/{{ .Values.global.images.alb2.repository }}:{{ .Values.global.images.alb2.tag }}"
          terminationMessagePolicy: File
          env:
            - name: NAME
              value: {{ .Values.loadbalancerName }}
            - name: NAMESPACE
              value: {{ .Values.global.namespace }}
            - name: DOMAIN
              value: {{ .Values.global.labelBaseDomain }}
            - name: ENABLE_GC
              value: "{{ .Values.enableGC }}"
            - name: ENABLE_GC_APP_RULE
              value: "{{ .Values.enableGCAppRule }}"
            - name: ENABLE_PROMETHEUS
              value: "{{ .Values.enablePrometheus }}"
            - name: ENABLE_PORTPROBE
              value: "{{ .Values.enablePortprobe }}"
            - name: ENABLE_IPV6
              value: "{{ .Values.enableIPV6 }}"
            - name: ENABLE_HTTP2
              value: "{{ .Values.enableHTTP2 }}"
            - name: ENABLE_GZIP
              value: "{{ .Values.enableGzip }}"
            - name: SERVE_INGRESS
              value: "{{ .Values.enableIngress }}"
            - name: ENABLE_PROFILE
              value: "{{ .Values.enableProfile }}"
            - name: DEFAULT-SSL-CERTIFICATE
              value: "{{ .Values.defaultSSLCert }}"
            - name: DEFAULT-SSL-STRATEGY
              value: "{{ .Values.defaultSSLStrategy }}"
            - name: INGRESS_HTTP_PORT
              value: "{{ .Values.ingressHTTPPort }}"
            - name: INGRESS_HTTPS_PORT
              value: "{{ .Values.ingressHTTPSPort }}"
            - name: WORKER_LIMIT
              value: "{{ .Values.workerLimit }}"
            - name: SCENARIO
              value: "{{ .Values.global.platformscenario }}"
            - name: RESYNC_PERIOD
              value: "{{ .Values.resyncPeriod }}"
            - name: METRICS_PORT
              value: "{{ .Values.metricsPort }}"
            - name: BACKLOG
              value: "{{ .Values.backlog }}"
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /status
              port: {{ .Values.metricsPort }}
            initialDelaySeconds: 60
            periodSeconds: 60
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /status
              port: {{ .Values.metricsPort }}
            initialDelaySeconds: 6
            periodSeconds: 1
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
          - name: tweak-conf
            mountPath: /alb/tweak/
          - name: shared-data
            mountPath: /var/log/nginx
        - name: log-sidecar
          image: "{{ .Values.global.registry.address }}/{{ .Values.global.images.alb2.repository }}:{{ .Values.global.images.alb2.tag }}"
          volumeMounts:
          - name: shared-data
            mountPath: /var/log/nginx
          command: [ "/usr/bin/tail", "-F", "/var/log/nginx/access.log" ]

      volumes:
      - name: tweak-conf
        configMap:
          name: {{ .Values.loadbalancerName }}
          items:
          - key: http
            path: http.conf
          - key: http_server
            path: http_server.conf
          - key: upstream
            path: upstream.conf
          - key: stream
            path: stream.conf
      - name: shared-data
        emptyDir: { }
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        alb2.{{ .Values.global.labelBaseDomain }}/type: {{ .Values.antiAffinityKey }}
        service.{{ .Values.global.labelBaseDomain }}/name: deployment-{{ .Values.loadbalancerName }}
        service_name: alb2-{{ .Values.loadbalancerName }}
        {{ .Values.global.labelBaseDomain }}/product: "Platform-Center"
metadata:
  name: {{ .Values.loadbalancerName }}
  namespace: {{ .Values.global.namespace }}
  labels:
    service_name: alb2-{{ .Values.loadbalancerName }}
